name: 多平台构建

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: 设置Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 构建Windows版本
      run: python build-ci.py
    
    - name: 上传Windows构建产物
      uses: actions/upload-artifact@v3
      with:
        name: file-save-system-windows
        path: dist/
        retention-days: 30

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: 设置Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 构建macOS版本
      run: python build-ci.py
    
    - name: 上传macOS构建产物
      uses: actions/upload-artifact@v3
      with:
        name: file-save-system-macos
        path: dist/
        retention-days: 30

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: 设置Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 构建Linux版本
      run: python build-ci.py
    
    - name: 上传Linux构建产物
      uses: actions/upload-artifact@v3
      with:
        name: file-save-system-linux
        path: dist/
        retention-days: 30

  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
    - name: 下载所有构建产物
      uses: actions/download-artifact@v3
      with:
        path: artifacts/
    
    - name: 准备发布文件
      run: |
        mkdir -p release
        
        # 复制Windows版本
        if [ -d "artifacts/file-save-system-windows" ]; then
          cp -r artifacts/file-save-system-windows/* release/
        fi
        
        # 复制macOS版本
        if [ -d "artifacts/file-save-system-macos" ]; then
          cp -r artifacts/file-save-system-macos/* release/
        fi
        
        # 复制Linux版本
        if [ -d "artifacts/file-save-system-linux" ]; then
          cp -r artifacts/file-save-system-linux/* release/
        fi
        
        # 创建启动脚本
        cat > release/start_windows.bat << 'EOF'
        @echo off
        echo 启动文件保存系统...
        echo 访问地址: http://localhost:8000
        echo 按Ctrl+C停止服务
        echo.
        file_save_system.exe runserver 0.0.0.0:8000
        pause
        EOF
        
        cat > release/start_macos.sh << 'EOF'
        #!/bin/bash
        echo "启动文件保存系统..."
        echo "访问地址: http://localhost:8000"
        echo "按Ctrl+C停止服务"
        echo ""
        ./file_save_system runserver 0.0.0.0:8000
        EOF
        
        cat > release/start_linux.sh << 'EOF'
        #!/bin/bash
        echo "启动文件保存系统..."
        echo "访问地址: http://localhost:8000"
        echo "按Ctrl+C停止服务"
        echo ""
        ./file_save_system runserver 0.0.0.0:8000
        EOF
        
        chmod +x release/start_macos.sh
        chmod +x release/start_linux.sh
        
        # 创建README
        cat > release/README.md << 'EOF'
        # 文件保存系统 - 多平台版本
        
        ## 使用方法
        
        ### Windows
        1. 双击 `start_windows.bat` 启动服务
        2. 或直接运行 `file_save_system.exe`
        
        ### macOS
        1. 运行 `./start_macos.sh` 启动服务
        2. 或直接运行 `./file_save_system`
        
        ### Linux
        1. 运行 `./start_linux.sh` 启动服务
        2. 或直接运行 `./file_save_system`
        
        ## 访问地址
        - 主页面: http://localhost:8000
        - API文档: http://localhost:8000/swagger/
        - 管理后台: http://localhost:8000/admin/
        
        ## 注意事项
        - 首次运行会自动创建数据库
        - 默认管理员账号: admin / admin123
        - 按Ctrl+C停止服务
        EOF
    
    - name: 创建发布
      uses: softprops/action-gh-release@v1
      with:
        files: release/*
        body: |
          ## 文件保存系统 v${{ github.event.release.tag_name }}
          
          ### 包含平台
          - ✅ Windows (.exe)
          - ✅ macOS (可执行文件)
          - ✅ Linux (可执行文件)
          
          ### 使用方法
          1. 下载对应平台的压缩包
          2. 解压到任意目录
          3. 运行启动脚本或可执行文件
          4. 访问 http://localhost:8000
          
          ### 功能特性
          - 📁 文件上传和管理
          - 🔍 智能搜索和分类
          - 📊 性能监控
          - 🔐 用户权限管理
          - 📝 操作历史记录
          
          ### 系统要求
          - Windows 10/11 或 macOS 10.15+ 或 Linux
          - 至少 2GB 内存
          - 至少 100MB 磁盘空间
        draft: false
        prerelease: false