name: 多平台构建

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发

env:
  PYTHON_VERSION: '3.12'

jobs:
  build-windows:
    runs-on: windows-latest
    name: 构建 Windows 版本
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 构建Windows版本
      run: python build.py
    
    - name: 测试可执行文件
      run: |
        cd dist
        .\file_save_system.exe --help
    
    - name: 上传Windows构建产物
      uses: actions/upload-artifact@v4
      with:
        name: file-save-system-windows
        path: dist/
        retention-days: 30

  build-macos:
    runs-on: macos-latest
    name: 构建 macOS 版本
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 构建macOS版本
      run: python build.py
    
    - name: 测试可执行文件
      run: |
        cd dist
        ./file_save_system --help
    
    - name: 上传macOS构建产物
      uses: actions/upload-artifact@v4
      with:
        name: file-save-system-macos
        path: dist/
        retention-days: 30

  build-linux:
    runs-on: ubuntu-latest
    name: 构建 Linux 版本
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: 安装系统依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
    
    - name: 安装Python依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 构建Linux版本
      run: python build.py
    
    - name: 测试可执行文件
      run: |
        cd dist
        ./file_save_system --help
    
    - name: 上传Linux构建产物
      uses: actions/upload-artifact@v4
      with:
        name: file-save-system-linux
        path: dist/
        retention-days: 30

  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    name: 创建发布版本
    steps:
    - name: 下载所有构建产物
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: 创建发布包
      run: |
        mkdir -p release
        # Windows
        cp -r artifacts/file-save-system-windows/* release/
        mv release/file_save_system.exe release/file_save_system_windows.exe
        # macOS
        cp -r artifacts/file-save-system-macos/* release/
        mv release/file_save_system release/file_save_system_macos
        # Linux
        cp -r artifacts/file-save-system-linux/* release/
        mv release/file_save_system release/file_save_system_linux
        
        # 创建启动脚本
        echo '#!/bin/bash' > release/start_windows.bat
        echo 'file_save_system_windows.exe runserver 0.0.0.0:8000' >> release/start_windows.bat
        
        echo '#!/bin/bash' > release/start_macos.sh
        echo './file_save_system_macos runserver 0.0.0.0:8000' >> release/start_macos.sh
        chmod +x release/start_macos.sh
        
        echo '#!/bin/bash' > release/start_linux.sh
        echo './file_save_system_linux runserver 0.0.0.0:8000' >> release/start_linux.sh
        chmod +x release/start_linux.sh
    
    - name: 创建发布说明
      run: |
        echo "# 文件保存系统 - 多平台版本" > release/README.md
        echo "" >> release/README.md
        echo "## 使用方法" >> release/README.md
        echo "" >> release/README.md
        echo "### Windows" >> release/README.md
        echo "双击 \`start_windows.bat\` 或运行 \`file_save_system_windows.exe\`" >> release/README.md
        echo "" >> release/README.md
        echo "### macOS" >> release/README.md
        echo "运行 \`./start_macos.sh\` 或 \`./file_save_system_macos\`" >> release/README.md
        echo "" >> release/README.md
        echo "### Linux" >> release/README.md
        echo "运行 \`./start_linux.sh\` 或 \`./file_save_system_linux\`" >> release/README.md
        echo "" >> release/README.md
        echo "访问 http://localhost:8000 使用系统" >> release/README.md
    
    - name: 创建GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: release/*
        body_path: release/README.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
